name: CI

on:
  push:
    branches: 
      - '**'
  pull_request:
    branches: 
      - '**'
  workflow_dispatch:

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    name: Build frontend
    defaults:
      run:
        shell: bash
        working-directory: frontend
    env:
      IMAGE_NAME: registry.gitlab.com/6uliver/piac/frontend:${{ github.sha }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Login to GitLab
        uses: docker/login-action@v1
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}

      - name: Build Docker image
        run: docker build . -t $IMAGE_NAME

      - name: Push Docker image
        run: docker push $IMAGE_NAME

  build-backend:
    name: Build backend
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: backend
    env:
      IMAGE_NAME: registry.gitlab.com/6uliver/piac/backend:${{ github.sha }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Login to GitLab
        uses: docker/login-action@v1
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_PASSWORD }}

      - name: Build Docker image
        run: docker build . -t $IMAGE_NAME

      - name: Push Docker image
        run: docker push $IMAGE_NAME
        
  deploy-staging:
    name: Deploy to staging
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    needs: [build-frontend, build-backend]
    steps:
      - name: Deploy backend
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/felpenzzel
            ./deploy.sh stage ${{ github.sha }}
